# Задача 2.2. 

# Напишите функцию, которая возвращает номер квартал по номеру месяца
# Например: 
# месяц 2 (февраль) является частью первого квартала; 
# месяц 6 (июнь) является частью второго квартала; 
# месяц 11 (ноябрь) является частью четвертого квартала.

months = [
    ['январь', 1],
    ['февраль', 2], 
    ['март', 3],
    ['апрель', 4], 
    ['май', 5],
    ['июнь', 6],
    ['июль', 7],
    ['август', 8],
    ['сентярь', 9],
    ['октябрь', 10],
    ['ноябрь', 11],
    ['декабрь', 12],
    ]


def quarter_of():
    n = int(input('Введите номер месяца: '))
    if 1 <= n <= 3:
        print(f'месяц {n} ({months[n-1][0]}) является частью первого квартала')
    elif 4 <= n <= 6:
        print(f'месяц {n} ({months[n-1][0]}) является частью второго квартала')
    elif 7 <= n <= 9:
        print(f'месяц {n} ({months[n-1][0]}) является частью третьего квартала')
    elif 10 <= n <= 12:
        print(f'месяц {n} ({months[n-1][0]}) является частью четвертого квартала')
    else:
        print('Такого месяца нет')


quarter_of()





# NODO - попробовать такой вариант
months_2 = {
    'первый': [{'январь': 1}, {'февраль': 2}, {'март': 3}],
    'второй': [{'апрель': 4}, {'май': 5}, {'июнь': 6}],
    'третий': [{'июль': 7}, {'август': 8}, {'сентярь': 9}],
    'четвертый': [{'октябрь': 10}, {'ноябрь': 11}, {'декабрь': 12}],
    }

def quarter_of_2():
    n = int(input('Введите номер месяца: '))
    if 1 <= n <= 3:
        print(f'месяц {n} ({months_2[n-1][0]}) - {} квартал')
    elif 4 <= n <= 6:
        print(f'месяц {n} ({months[n-1][0]}) - {} квартал')
    elif 7 <= n <= 9:
        print(f'месяц {n} ({months[n-1][0]}) - {} квартал')
    elif 10 <= n <= 12:
        print(f'месяц {n} ({months[n-1][0]}) - {} квартал')
    else:
        print('Такого месяца нет')